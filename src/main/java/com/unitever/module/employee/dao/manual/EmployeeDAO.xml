<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unitever.module.employee.dao.manual.EmployeeDAO">
	<resultMap type="Employee" id="resultEmployee">  
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="userId" property="userId" />
        <result column="headimgurl" property="headimgurl" />
        <result column="baseBitcoin" property="baseBitcoin" />
        <result column="bitcoinSurplus" property="bitcoinSurplus" />
        <result column="bitcoinIncome" property="bitcoinIncome" />
        <result column="bitcoinConsume" property="bitcoinConsume" />
        <result column="taskCount" property="taskCount" />
        <result column="publishTaskCount" property="publishTaskCount" />
        <result column="evaluationLevel" property="evaluationLevel" />
        <result column="status" property="status" />
         <result column="currentBitcoin" property="currentBitcoin" />
        <association column="user_id" property="user" select="com.unitever.module.user.dao.manual.UserDAO.get" />
	</resultMap>
	
	<select id="get" resultMap="resultEmployee" parameterType="String">
		select * from cp_employee 
		<where>
			id=#{id}
		</where>
	</select>
	
	<select id="getAll" resultMap="resultEmployee">
		select * from cp_employee order by name asc
	</select>
	
	<insert id="save" parameterType="Employee">
		insert into cp_employee(id,name,userId,headimgurl,baseBitcoin,bitcoinSurplus,bitcoinIncome,bitcoinConsume,status,user_id,evaluationLevel,taskCount,publishTaskCount,currentBitcoin) 
		value(#{id},#{name},#{userId},#{headimgurl},#{baseBitcoin},#{bitcoinSurplus},#{bitcoinIncome},#{bitcoinConsume},#{status},#{user.id},#{evaluationLevel},#{taskCount},#{publishTaskCount},#{currentBitcoin})
	</insert>
	
	<update id="update" parameterType="Employee">
		update cp_employee
		<set>
			<if test="name != null">name=#{name},</if>
			<if test="userId != null">userId=#{userId},</if>
			<if test="headimgurl!=null">headimgurl=#{headimgurl},</if>
			<if test="baseBitcoin != null">baseBitcoin=#{baseBitcoin},</if>
			<if test="bitcoinSurplus != null">bitcoinSurplus=#{bitcoinSurplus},</if>
			<if test="bitcoinIncome != null">bitcoinIncome=#{bitcoinIncome},</if>
			<if test="bitcoinConsume != null">bitcoinConsume=#{bitcoinConsume},</if>
			<if test="evaluationLevel != null">evaluationLevel=#{evaluationLevel},</if>
			<if test="taskCount!= null">taskCount=#{taskCount},</if>
			<if test="publishTaskCount!= null">publishTaskCount=#{publishTaskCount},</if>
			<if test="currentBitcoin!= null">currentBitcoin=#{currentBitcoin},</if>
			<if test="status != null">status=#{status},</if>
			<if test="user !=null and user.id != null">user_id=#{user.id},</if>
		</set>
		where id=#{id}
	</update>
	
	
	<select id="getEmployeeByUserId" resultMap="resultEmployee">
    	select * from cp_employee where userId=#{userId} 
    </select>
    
    
    <select id="getEmployees" resultMap="resultEmployee">
    	select * from cp_employee where user_id=#{id} order by name asc
    </select>
    
    <select id="getAllReceivedEmployees" resultMap="resultEmployee" parameterType="String">
    	select distinct * from cp_employee where instr(#{employees},userId)>0 order by name asc;
    </select>
    
    <update id="minusBitCoin">
    		update  cp_employee set bitcoinSurplus=CAST(CAST(bitcoinSurplus AS DECIMAL(30,8))-(CAST(baseBitcoin AS DECIMAL(30,8))/DAYOFMONTH(last_day(curdate()))) as DECIMAL(30,8)),
				bitcoinConsume=CAST(CAST(bitcoinConsume AS DECIMAL(30,8))+(CAST(baseBitcoin AS DECIMAL(30,8))/DAYOFMONTH(last_day(curdate()))) as DECIMAL(30,8))
	</update>
	
	<update id="initBitcoin">
    		update  cp_employee set bitcoinSurplus=baseBitcoin,bitcoinIncome=0,bitcoinConsume=0,currentBitcoin=CAST((CAST(baseBitcoin AS DECIMAL(30,8))/DAYOFMONTH(last_day(curdate()))) as DECIMAL(30,8))
	</update>
	
    <select id="getEmployeesByEmployees" resultMap="resultEmployee" parameterType="Employee">
    	select * from cp_employee
    	<where>
   			1=1
   			<if test="id != null">
			     and id =#{id}
			</if>
   			<if test="name != null">
			     and name like CONCAT('%','${name}','%' )  
			</if>
   			<if test="userId != null">
			     and userId =#{userId}
			</if>
   			<if test="headimgurl != null">
			     and headimgurl =#{headimgurl}
			</if>
   			<if test="baseBitcoin != null">
			     and baseBitcoin =#{baseBitcoin}
			</if>
   			<if test="bitcoinSurplus != null">
			     and bitcoinSurplus =#{bitcoinSurplus}
			</if>
   			<if test="bitcoinIncome != null">
			     and bitcoinIncome =#{bitcoinIncome}
			</if>
   			<if test="bitcoinConsume != null">
			     and bitcoinConsume =#{bitcoinConsume}
			</if>
   			<if test="evaluationLevel != null">
			     and evaluationLevel =#{evaluationLevel}
			</if>
   			<if test="status != null">
			     and status =#{status}
			</if>
   			<if test="user != null and user.id != null">
			     and user_id =#{user.id}
			</if>
		</where>
		order by name asc
    </select>
    
     <update id="updateTaskCount" parameterType="String">
    	update cp_employee set taskCount=taskCount+1 where id=#{id}
    </update>
</mapper>